const en_US = {
  title: 'Built-in Metrics',
  name: 'Name',
  collector: 'Collector',
  typ: 'Type',
  unit: 'Unit',
  unit_tip: 'When drawing, the value is automatically formatted according to the unit of the metric',
  note: 'Description',
  note_preview: 'Description Preview',
  expression: 'Expression',
  add_btn: 'Add Metric',
  clone_title: 'Clone Metric',
  edit_title: 'Edit Metric',
  batch: {
    not_select: 'Please select the metric first',
    export: {
      title: 'Export Metrics',
    },
    import: {
      title: 'Import Metrics',
      name: 'Name',
      result: 'Result',
      errmsg: 'Message',
    },
  },
  unitDesc: {
    none: 'raw value, no unit conversion',
    sishort: 'using the SI standard for conversion. e.g. 1K equals 1000.',
    bitsSI: 'bit, using the SI standard for conversion. e.g. 1K equals 1000.',
    bytesSI: 'byte, using the SI standard for conversion. e.g. 1K equals 1000.',
    bitsIEC: 'bit, using the IEC standard for conversion. e.g. 1K equals 1024.',
    bytesIEC: 'byte, using the IEC standard for conversion. e.g. 1K equals 1024.',
    packetsSec: 'packets per second',
    bitsSecSI: 'bits per second, using the SI standard for conversion. e.g. 1K equals 1000.',
    bytesSecSI: 'bytes per second, using the SI standard for conversion. e.g. 1K equals 1000.',
    bitsSecIEC: 'bits per second, using the IEC standard for conversion. e.g. 1K equals 1024.',
    bytesSecIEC: 'bytes per second, using the IEC standard for conversion. e.g. 1K equals 1024.',
    dBm: 'decibel-milliwatts',
    percent: 'percent(0-100) e.g. 34.5 -> 34.5%',
    percentUnit: 'percent(0.0-1.0) e.g. 0.235 -> 23.5%',
    seconds: 'time unit: seconds',
    milliseconds: 'time unit: milliseconds',
  },
};
export default en_US;
